// When color definition differs for dark and light variant,
// it gets @if ed depending on $variant
@import "ubuntu-colors";
@import "pop_os_colors";

@import "../../../colors";

//$base_color:  #212134; 
//$text_color:  white;
//$bg_color:  #373672;
//$fg_color:  #C0C0E5;

$selected_fg_color:  $select_color_fg;
$selected_bg_color: $select_color;

$selected_borders_color: darken($selected_bg_color, 30%);
$borders_color: rgba(darken($bg_color, 10%), 0.5);
$borders_edge: transparentize($fg_color, 0.93);
$link_color: lighten($selected_bg_color, 20%);
$link_visited_color: lighten($selected_bg_color, 10%);
$top_hilight: $borders_edge;

$warning_color: $text_yellow;
$error_color: $text_red;
$success_color:  #90CFB0;
$destructive_color:  #EA9090;

//$osd_fg_color: $fg_color;
$osd_text_color: white;
//$osd_bg_color: transparentize(darken(desaturate($bg_color, 100%), 4%),0.3);
$osd_insensitive_bg_color: transparentize(mix($osd_fg_color, opacify($osd_bg_color, 1), 10%), 0.5);
$osd_insensitive_fg_color: mix($osd_fg_color, opacify($osd_bg_color, 1), 50%);
$osd_borders_color: transparentize(black, 0.3);
$osd_outer_borders_color: transparentize(white, 0.84);

$tooltip_borders_color: $osd_outer_borders_color;
$shadow_color: transparentize(black, 0.9);

//insensitive state derived colors
$insensitive_fg_color: mix($fg_color, $bg_color, 50%);
$insensitive_bg_color: mix($bg_color, $base_color, 60%);
$insensitive_borders_color: $borders_color;

//colors for the backdrop state, derived from the main colors.
$backdrop_base_color: lighten($base_color,1%);
$backdrop_bg_color: $bg_color;
$backdrop_fg_color: mix($fg_color, $backdrop_bg_color, 80%);
$backdrop_insensitive_color: lighten($backdrop_bg_color,15%);
$backdrop_borders_color: mix($borders_color, $bg_color, 90%);
$backdrop_dark_fill: mix($backdrop_borders_color,$backdrop_bg_color, 35%);
